// This file reads a list of polynomials, a polynomial and a number k and tries
// to determine if the polynomial is in the rational ideal generated by the list of
// polynomial using k steps of the Buchberger algorithm. In case that it is, it
// prints the cofactor representation of the polynomial.
#include <bits/stdc++.h>
#include <gmpxx.h>

#include "ncgb/Buchberger.hpp"

using namespace std;
using namespace ncgb;


typedef Poly<mpq_class> P;

int main() {

  size_t n;

  cin >> n;
  cin.ignore();
  vector<P> G(n);
  for (size_t i = 0; i < n; ++i) {
    G[i] = P::nice_read();
  }

  P f;
  f = P::nice_read();
  size_t k;
  cin >> k;

  k += G.size();

  auto [ims, corep] = inIdealCofactor(G, f, k);

  if (ims == InIdeal) {
    corep->nice_print();
    cout << "InIdeal\n";
  } else if (ims == NotInIdeal) {
    cout << "NotInIdeal\n";
  } else {
    cout << "Unknown\n";
  }

}

